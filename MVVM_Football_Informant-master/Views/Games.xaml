<UserControl x:Class="MVVM_Football_Informant.Views.Games"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MVVM_Football_Informant.Views"
             mc:Ignorable="d"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:vm="clr-namespace:MVVM_Football_Informant.ViewModel"
             d:DesignHeight="500" d:DesignWidth="700"
             FontFamily="Bahnschrift Light Condensed">

    <UserControl.Resources>
        <vm:MainViewModel x:Key="mainVM"/>
    </UserControl.Resources>

    <Grid DataContext="{StaticResource mainVM}"
        Margin="10,0,10,10">
        <Grid
            Visibility="{Binding GameVM.GamesVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>

            <Button
            Content="GRY"
            IsEnabled="false"
            Height="60"
            Width="120"
            VerticalAlignment="Top"
            HorizontalAlignment="Right"
            Margin="0,0,30,0"/>

            <TextBlock Style="{StaticResource opacityTextBlock}"
                   Height="180"
                   Width="450"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Margin="50,0,0,0"
                   Foreground="White"
                   TextWrapping="WrapWithOverflow"
                   Padding="20,20,20,20"
                   FontSize="17">
                Traciłeś do zakładki "Gry",
                gdzie w banalnie prosty sposób
                możesz sprawdzić swoją piłkarską wiedzę z zakresu
                informacji na temat klubów sportowych
                oraz ich twierdz - czyli stadionów.
                Poniżej wybierz 'typ', następnie według jakiego
                kryterium na być toczona gra i na końcu ilość rund,
                np. kluby - trofea - 5, utworzy grę, gdzie w pięciu rundach
                będziesz dokonywał wyboru, który klub ma więcej trofeów
                albo mogł zaznaczyć, że ich ilość jest taka sama. Powodzenia!
            </TextBlock>

            <Grid
            Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="3">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBlock
                        Text="Typ:"
                        Foreground="White"
                        VerticalAlignment="Bottom"
                        Margin="5,0"/>
                        <ComboBox
                        Grid.Row="1"
                        Margin="5,0"
                        Height="35"
                        VerticalAlignment="Top"
                        SelectedItem="{Binding GameVM.ActualTarget}"
                        ItemsSource="{Binding GameVM.ContentOfTargetsComboBox}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding GameVM.LoadTypesAndShowTypesComboBox}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                    </Grid>
                </Grid>

                <Grid
                Grid.Row="0"
                Grid.Column="3"
                Grid.ColumnSpan="3">

                    <Grid
                    x:Name="GridTypesComboBox"
                    Visibility="{Binding GameVM.TypesOfGameVisibility}">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBlock
                        Text="Według:"
                        Foreground="White"
                        VerticalAlignment="Bottom"
                        Margin="5,0"/>
                        <ComboBox
                        Name="typesComboBox"
                        Grid.Row="1"
                        Margin="5,0"
                        Height="35"
                        VerticalAlignment="Top"
                        SelectedItem="{Binding GameVM.ActualType}"
                        ItemsSource="{Binding GameVM.ContentOfTypesComboBox}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding GameVM.ShowStartButton}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                    </Grid>
                </Grid>

                <Grid
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="3">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBlock
                        Text="Rundy:"
                        Foreground="White"
                        VerticalAlignment="Bottom"
                        Margin="5,0"/>

                        <DockPanel VerticalAlignment="Top" 
                               Margin="5,0,5,0"
                               Grid.Row="1">
                            <TextBox Text="{Binding ElementName=slValue, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                 DockPanel.Dock="Right"
                                 TextAlignment="Left"
                                 VerticalAlignment="Top"
                                 VerticalContentAlignment="Top"
                                 FontSize="25"
                                 Width="40"
                                 Height="30"
                                 Margin="9,0,0,0"
                                 Background="Transparent"
                                 Foreground="White"
                                 BorderThickness="0"
                                 IsHitTestVisible="False"/>
                            <Slider
                            Minimum="2"
                            Maximum="10"
                            Margin="0,5,0,0"
                            TickPlacement="BottomRight" 
                            TickFrequency="1"
                            SmallChange="1"
                            IsSnapToTickEnabled="True" 
                            Name="slValue"
                            Value="{Binding GameVM.NumberOfRounds}"/>
                        </DockPanel>
                    </Grid>
                </Grid>

                <Button
                Grid.Column="6"
                Grid.Row="2"
                Content="START"
                Visibility="{Binding GameVM.StartButtonVisibility}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding GameVM.QuizStart}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </Grid>
        </Grid>

        <Grid
            Visibility="{Binding GameVM.GamesWorkedVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBlock 
                    Style="{StaticResource opacityTextBlock}"
                FontSize="20"
                Grid.Row="0"
                Grid.Column="1"
                Grid.ColumnSpan="5"
                Margin="10,0,10,0"
                TextAlignment="Center"
                Foreground="White"
                Text="{Binding GameVM.GameQuestion, 
                 StringFormat='Zaznacz: {0}'}"
                VerticalAlignment="Bottom"/>

            <Grid
            Grid.Row="1"
            Grid.Column="1"
            Grid.ColumnSpan="2"
            Grid.RowSpan="2">

                <StackPanel
                    VerticalAlignment="Center">
                    <Image Margin="10">
                        <Image.Source>
                            <BitmapImage UriSource="\Images\Icons\herb.png"/>
                        </Image.Source>
                    </Image>
                </StackPanel>
            </Grid>

            <Grid
            Grid.Row="1"
            Grid.Column="4"
            Grid.ColumnSpan="2"
            Grid.RowSpan="2">

                <StackPanel
                    VerticalAlignment="Center">
                    <Image Margin="10">
                        <Image.Source>
                            <BitmapImage UriSource="\Images\Icons\herb.png"/>
                        </Image.Source>
                    </Image>
                </StackPanel>
            </Grid>

            <TextBlock 
                    Style="{StaticResource opacityTextBlock}"
                Grid.Row="2"
                Grid.Column="3"
                TextAlignment="Center"
                Foreground="White"
                Height="25"
                FontSize="17"
                VerticalAlignment="Bottom">
                <TextBlock.Text>
                    <MultiBinding StringFormat="Runda: {0}/{1}">
                        <Binding Path="GameVM.RoundNumber"/>
                        <Binding Path="GameVM.NumberOfRounds"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>

            <Button
                Name="Decision1"
                FontSize="15"
            Grid.Column="1"
            Grid.ColumnSpan="2"
            Grid.Row="3"
            Height="40"
            VerticalAlignment="Top"
            Content="{Binding GameVM.DecisionElement1}"
            Margin="0,5,0,0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding GameVM.LoadAnswer}" 
                                               CommandParameter="{Binding Content, ElementName=Decision1}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>

            <Button
                Name="Decision2"
            Grid.Column="3"
            Grid.Row="3"
            Height="40"
            VerticalAlignment="Top"
            Content="{Binding GameVM.DecisionElement2}"
            Margin="0,5,0,0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding GameVM.LoadAnswer}" 
                                               CommandParameter="{Binding Content, ElementName=Decision2}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>

            <Button
                Name="Decision3"
                FontSize="15"
            Grid.Column="4"
            Grid.ColumnSpan="2"
            Grid.Row="3"
            Height="40"
            VerticalAlignment="Top"
            Content="{Binding GameVM.DecisionElement3}"
            Margin="0,5,0,0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding GameVM.LoadAnswer}" 
                                               CommandParameter="{Binding Content, ElementName=Decision3}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>

            <TextBlock 
                    Style="{StaticResource opacityTextBlock}"
                Grid.Row="3"
                Grid.Column="2"
                Grid.ColumnSpan="3"
                TextAlignment="Center"
                Foreground="White"
                Text="{Binding GameVM.FinalDecisionElement, 
                 StringFormat='Twój wybór: {0}'}"
                VerticalAlignment="Bottom"
                Visibility="{Binding GameVM.NEXTButtonVisibility}"/>

            <Button
            Grid.Column="3"
            Grid.Row="4"
            Height="40"
            VerticalAlignment="Center"
            Content="NEXT"
            Margin="0,5,0,0"
                Visibility="{Binding GameVM.NEXTButtonVisibility}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding GameVM.CheckAnswerAndLoadNextPair}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </Grid>

        <Grid
            Visibility="{Binding GameVM.GamesEndVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBlock
                Style="{StaticResource opacityTextBlock}"
                Grid.Column="2"
                Grid.Row="1"
                Grid.ColumnSpan="3"
                Text="KONIEC!"
                Foreground="White"
                FontSize="65"
                TextAlignment="Center"
                VerticalAlignment="Center"/>

            <TextBlock 
                    Style="{StaticResource opacityTextBlock}"
                Grid.Row="2"
                Grid.Column="2"
                Grid.ColumnSpan="3"
                TextAlignment="Center"
                Foreground="White"
                Height="25"
                FontSize="20"
                VerticalAlignment="Center">
                <TextBlock.Text>
                    <MultiBinding StringFormat="Poprawne: {0}/{1}">
                        <Binding Path="GameVM.NumberOfCorrectAnswer" />
                        <Binding Path="GameVM.NumberOfRounds" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>

            <Button
                Grid.Column="6"
                Grid.Row="4"
                Content="ZAKOŃCZ"
                Visibility="Visible">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding GameVM.QuizKoniec}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </Grid>
    </Grid>
</UserControl>
